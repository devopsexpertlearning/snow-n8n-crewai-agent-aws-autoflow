{
  "name": "AWS Multi-Resource Automation - Production",
  "nodes": [
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {"mode": "everyDay","hour": [9, 21],"minute": 0}
          ]
        }
      },
      "id": "cron_ticket_polling",
      "name": "Cron - Poll ServiceNow Tickets",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [250, 300]
    },
    {
      "parameters": {
        "operation": "getAll",
        "table": "incident",
        "options": {"query": "active=true^ORDERBYDESCsys_created_on","limit": 50}
      },
      "id": "servicenow_get_tickets",
      "name": "ServiceNow - Get Tickets",
      "type": "n8n-nodes-base.servicenow",
      "typeVersion": 1,
      "position": [500, 300],
      "credentials": {"serviceNowApi":{"id":"={{$credentials.serviceNowApi.id}}","name":"ServiceNow Dev"}}
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "={{$credentials.CrewAI_API.url}}",
        "method": "POST",
        "responseFormat": "json",
        "bodyParametersUi": {
          "parameter": [
            {"name": "ticket_description","value": "={{$json[\"short_description\"]}}"},
            {"name": "ticket_metadata","value": "={{JSON.stringify($json)}}"}
          ]
        }
      },
      "id": "crewai_classify_ticket",
      "name": "CrewAI - Classify Ticket",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [800, 300],
      "credentials": {"httpHeaderAuth":{"id":"={{$credentials.CrewAI_API.id}}","name":"CrewAI API"}}
    },
    {
      "parameters": {
        "mode": "expression",
        "rules": [
          {"value": "workspace_only","expression": "={{$json[\"action_type\"] === 'workspace_only'}}","output":0},
          {"value": "workspace_and_others","expression": "={{$json[\"action_type\"] === 'workspace_and_others'}}","output":1},
          {"value": "non_workspace","expression": "={{$json[\"action_type\"] === 'non_workspace'}}","output":2}
        ]
      },
      "id": "switch_routing_logic",
      "name": "Switch - Route by Action Type",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 1,
      "position": [1050, 300]
    },
    {
      "parameters": {},
      "id": "approval_workflow_trigger",
      "name": "Trigger Approval Workflow",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [1300, 100]
    },
    {
      "parameters": {
        "mode": "expression",
        "rules": [
          {"value": "ec2","expression": "={{$json[\"resource_type\"] === 'EC2'}}","output":0},
          {"value": "rds","expression": "={{$json[\"resource_type\"] === 'RDS'}}","output":1},
          {"value": "s3","expression": "={{$json[\"resource_type\"] === 'S3'}}","output":2},
          {"value": "other","expression": "={{$json[\"resource_type\"] !== 'EC2' && $json[\"resource_type\"] !== 'RDS' && $json[\"resource_type\"] !== 'S3'}}","output":3}
        ]
      },
      "id": "switch_resource_type",
      "name": "Switch - Resource Type",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 1,
      "position": [1300, 300]
    },
    {
      "parameters": {
        "service": "workspaces",
        "operation": "createWorkspaces",
        "region": "={{$credentials.AWS_WorkSpaces.region}}",
        "workspaces": [
          {
            "DirectoryId": "d-1234567890",
            "UserName": "={{$json[\"requester\"]}}",
            "BundleId": "wsb-xxxxxxxx",
            "WorkspaceProperties": {"RunningMode":"AUTO_STOP","RunningModeAutoStopTimeoutInMinutes":60,"RootVolumeSizeGib":80,"UserVolumeSizeGib":50,"ComputeTypeName":"STANDARD"}
          }
        ]
      },
      "id": "provision_workspace",
      "name": "Provision AWS WorkSpace",
      "type": "n8n-nodes-aws.workspaces",
      "typeVersion": 1,
      "position": [1600, 100],
      "credentials": {"aws":{"id":"={{$credentials.AWS_WorkSpaces.id}}","name":"AWS WorkSpaces"}}
    },
    {
      "parameters": {
        "mode": "wait",
        "waitTime": 120
      },
      "id": "wait_for_workspace_ready",
      "name": "Wait for Workspace Ready",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [1700, 100]
    },
    {
      "parameters": {
        "service": "ec2",
        "operation": "runInstances",
        "region": "={{$credentials.AWS_WorkSpaces.region}}",
        "instanceType": "t3.medium",
        "imageId": "ami-xxxxxxxx",
        "minCount": 1,
        "maxCount": 1
      },
      "id": "provision_ec2",
      "name": "Provision EC2",
      "type": "n8n-nodes-aws.ec2",
      "typeVersion": 1,
      "position": [1600, 300],
      "credentials": {"aws":{"id":"={{$credentials.AWS_WorkSpaces.id}}","name":"AWS WorkSpaces"}}
    },
    {
      "parameters": {
        "mode": "wait",
        "waitTime": 60
      },
      "id": "wait_ec2_ready",
      "name": "Wait for EC2 Ready",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [1700, 300]
    },
    {
      "parameters": {
        "service": "rds",
        "operation": "createDBInstance",
        "region": "={{$credentials.AWS_WorkSpaces.region}}",
        "dbInstanceIdentifier": "={{'db-'+$json[\"sys_id\"]}}",
        "dbInstanceClass": "db.t3.medium",
        "engine": "mysql",
        "allocatedStorage": 20,
        "masterUsername": "admin",
        "masterUserPassword": "={{$credentials.AWS_RDS.password}}"
      },
      "id": "provision_rds",
      "name": "Provision RDS",
      "type": "n8n-nodes-aws.rds",
      "typeVersion": 1,
      "position": [1600, 400],
      "credentials": {"aws":{"id":"={{$credentials.AWS_WorkSpaces.id}}","name":"AWS WorkSpaces"}}
    },
    {
      "parameters": {
        "mode": "wait",
        "waitTime": 120
      },
      "id": "wait_rds_ready",
      "name": "Wait for RDS Ready",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [1700, 400]
    },
    {
      "parameters": {
        "service": "s3",
        "operation": "createBucket",
        "region": "={{$credentials.AWS_WorkSpaces.region}}",
        "bucketName": "={{'s3-'+$json[\"sys_id\"]}}"
      },
      "id": "provision_s3",
      "name": "Provision S3 Bucket",
      "type": "n8n-nodes-aws.s3",
      "typeVersion": 1,
      "position": [1600, 500],
      "credentials": {"aws":{"id":"={{$credentials.AWS_WorkSpaces.id}}","name":"AWS WorkSpaces"}}
    },
    {
      "parameters": {
        "authentication": "smtp",
        "fromEmail": "={{$credentials.SMTP.user}}",
        "toEmail": "={{$json[\"requester_email\"]}}",
        "subject": "Resource Provisioned",
        "text": "Hello {{$json[\"requester\"]}},\n\nYour requested resource {{$json[\"resource_type\"]}} has been provisioned successfully."
      },
      "id": "notify_requester_resource_ready",
      "name": "Notify Requester Resource Ready",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 1,
      "position": [1900, 300],
      "credentials": {"smtp":{"id":"={{$credentials.SMTP.id}}","name":"SMTP AWS SES"}}
    },
    {
      "parameters": {
        "operation": "update",
        "table": "incident",
        "updateFields": {
          "state": "Closed",
          "comments": "Requested resource provisioned successfully and requester notified."
        },
        "query": "sys_id={{$json[\"sys_id\"]}}"
      },
      "id": "update_servicenow_ticket",
      "name": "Update ServiceNow Ticket",
      "type": "n8n-nodes-base.servicenow",
      "typeVersion": 1,
      "position": [2100, 300],
      "credentials": {"serviceNowApi":{"id":"={{$credentials.serviceNowApi.id}}","name":"ServiceNow Dev"}}
    },
    {
      "parameters": {},
      "id": "error_trigger",
      "name": "Error Trigger",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [2400, 300]
    },
    {
      "parameters": {
        "authentication": "smtp",
        "fromEmail": "={{$credentials.SMTP.user}}",
        "toEmail": "ops-team@example.com",
        "subject": "Workflow Error Notification",
        "text": "An error occurred in the AWS Multi-Resource Automation workflow. Check n8n execution logs."
      },
      "id": "notify_ops_error",
      "name": "Notify Ops Team on Error",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 1,
      "position": [2600, 300],
      "credentials": {"smtp":{"id":"={{$credentials.SMTP.id}}","name":"SMTP AWS SES"}}
    }
  ],
  "connections": {
    "cron_ticket_polling":{"main":[[{"node":"servicenow_get_tickets","type":"main","index":0}]]},
    "servicenow_get_tickets":{"main":[[{"node":"crewai_classify_ticket","type":"main","index":0}]]},
    "crewai_classify_ticket":{"main":[[{"node":"switch_routing_logic","type":"main","index":0}]]},
    "switch_routing_logic":{
      "main":[
        [{"node":"approval_workflow_trigger","type":"main","index":0}],
        [{"node":"switch_resource_type","type":"main","index":0}],
        [{"node":"assign_non_workspace","type":"main","index":0}]
      ]
    },
    "approval_workflow_trigger":{"main":[[{"node":"provision_workspace","type":"main","index":0}]]},
    "provision_workspace":{"main":[[{"node":"wait_for_workspace_ready","type":"main","index":0}]]},
    "wait_for_workspace_ready":{"main":[[{"node":"notify_requester_resource_ready","type":"main","index":0}]]},
    "switch_resource_type":{
      "main":[
        [{"node":"provision_ec2","type":"main","index":0}],
        [{"node":"provision_rds","type":"main","index":1}],
        [{"node":"provision_s3","type":"main","index":2}],
        [{"node":"notify_requester_resource_ready","type":"main","index":3}]
      ]
    },
    "provision_ec2":{"main":[[{"node":"wait_ec2_ready","type":"main","index":0}]]},
    "wait_ec2_ready":{"main":[[{"node":"notify_requester_resource_ready","type":"main","index":0}]]},
    "provision_rds":{"main":[[{"node":"wait_rds_ready","type":"main","index":0}]]},
    "wait_rds_ready":{"main":[[{"node":"notify_requester_resource_ready","type":"main","index":0}]]},
    "provision_s3":{"main":[[{"node":"notify_requester_resource_ready","type":"main","index":0}]]},
    "notify_requester_resource_ready":{"main":[[{"node":"update_servicenow_ticket","type":"main","index":0}]]},
    "assign_non_workspace":{"main":[[{"node":"notify_requester_resource_ready","type":"main","index":0}]]},
    "error_trigger":{"main":[[{"node":"notify_ops_error","type":"main","index":0}]]}
  }
}